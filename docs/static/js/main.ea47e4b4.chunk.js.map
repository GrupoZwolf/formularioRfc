{"version":3,"sources":["components/FacturaCard.js","components/FacturaList.js","components/FormularioFactura.js","components/FormularioRegistro.js","components/FormularioUpdate.js","components/DataCard.js","components/MainMenu.js","router/RouterComponent.js","App.js","index.js"],"names":["FacturaCard","factura","handleDownload","a","fetch","UUID","method","mode","headers","then","respons","blob","data","resData","FileSaver","saveAs","className","Folio","FechaTimbrado","Receptor","onClick","FacturaList","rfc","useState","facturas","setData","useEffect","res","json","status","bringData","console","log","length","map","element","uuid","FormularioFactura","uid","useParams","useForm","register","handleSubmit","errors","formState","monto","onSubmit","cfid","body","JSON","stringify","response","htmlFor","value","type","id","required","onChange","e","target","name","FormularioRegistro","nombre","apellidos","telefono","razons","email","email2","email3","calle","numero_exterior","numero_interior","codpos","colonia","estado","handleType","noValidate","pattern","title","FormularioUpdate","ciudad","delegacion","localidad","cfdis","numregidtrib","usocfdi","isDisable","setisDisable","Data","Contacto","Nombre","Apellidos","Telefono","RazonSocial","RFC","Email","Email2","Email3","Calle","Numero","Interior","CodigoPostal","Colonia","Ciudad","Delegacion","Localidad","NumRegIdTrib","UsoCFDI","UID","Estado","dataForm","disabled","DataCard","usuario","Pais","href","MainMenu","usuarios","RouterComponent","exact","path","component","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea47e4b4.chunk.js","sourcesContent":["import React from 'react'\r\nimport FileSaver from 'file-saver';\r\n\r\nexport const FacturaCard = ({ factura }) => {\r\n\r\n    const handleDownload = async () => {\r\n        const response = await fetch(`http://app-factura-carnes.herokuapp.com/api/factura/get-factura-by-id?uuid=${ factura.UUID }`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-type\" : \"application/xml\"\r\n            }\r\n        }).then( (respons) => {\r\n            return respons.blob();\r\n        }).then(async (data) => {\r\n            const resData = await data\r\n            FileSaver.saveAs(resData, 'nameFile.xml');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{ `Folio: ${ factura.Folio }` }</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Timbrado el: { factura.FechaTimbrado }</h6>\r\n                <p className=\"card-text\"> { `Receptor: ${ factura.Receptor }` } </p>\r\n                    <button onClick={ handleDownload } className=\"btn btn-primary\">\r\n                        Descargar CFID\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FacturaCard } from './FacturaCard'\r\n\r\nexport const FacturaList = ({ rfc }) => {\r\n    \r\n    const [facturas, setData] = useState({\r\n        data: []\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const bringData = async () => {\r\n            await fetch(`http://app-factura-carnes.herokuapp.com/api/factura/get-factura-list?rfc=${ rfc }`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            })\r\n            .then( (res) => res.json() )\r\n            .then( async (res) => {\r\n                const resData = await res;\r\n                if(resData.status === \"error\" ){\r\n\r\n                } else {\r\n                    setData({\r\n                        data: resData.data\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        if (!rfc){\r\n            console.log('no hay rfc :c')\r\n        } else {\r\n            bringData();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [rfc])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row py-5\">\r\n                {\r\n                    (facturas.data.length === 0) ? <p>Agrega tus datos fiscales!</p> : facturas.data.map((element) => {\r\n\r\n                        return (\r\n                        <>\r\n                        <div className=\"col-sm-4\">\r\n                            <FacturaCard key={ element.uuid } factura={ element }  />\r\n                        </div>\r\n                        </>\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport const FormularioFactura = () => {\r\n    const { uid } = useParams();\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [data, setData] = useState({\r\n        monto: ''\r\n    })\r\n\r\n    const handleType = (e) => {\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: value\r\n        });\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        switch (data.cfid) {\r\n            case \"Gastos generales\":\r\n                data.cfid = \"G03\"\r\n                break;\r\n            case \"Adquision de mercancias\":\r\n                data.cfid = \"G01\"\r\n                break;\r\n            case \"Por Definir\":\r\n                data.cfid = \"P01\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        data.uid = uid;\r\n        const response = await fetch('http://app-factura-carnes.herokuapp.com/api/factura/create-factura', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n            const resData = await res;\r\n            return resData;\r\n        })\r\n        if (response.response === \"error\") {\r\n            console.log(response)\r\n        } else {\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container fs-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-left pt-5\">\r\n                        <h5 className=\"h2 uppercase text-center\">\r\n                            Generar tu factura\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col p-5\">\r\n                        <form onSubmit={handleSubmit(onSubmit)} className={ !errors ? 'was-validated' : 'needs-validated'   }  >\r\n                            \r\n                            <div className=\"mb-3 text-left\">\r\n                                <label htmlFor=\"monto\" className=\"form-label\">monto</label>\r\n                                <input value={ data.monto } type=\"tel\" className=\"form-control fs-6\" id=\"monto\" {...register(\"monto\", {required: true})} onChange={ handleType } />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"cfid\">Uso de CFID</label>\r\n                                <select className=\"form-control\" id=\"cfid\" {...register(\"cfid\", {required: true})}>\r\n                                    <option>Gastos generales</option>\r\n                                    <option>Adquision de mercancias</option>\r\n                                    <option>Por Definir</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col mx-auto text-center py-5\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" >Enviar</button>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const FormularioRegistro = () => {\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [data, setData] = useState({\r\n        nombre: '',\r\n        apellidos: '',\r\n        telefono: '',\r\n        razons: '',\r\n        rfc: '',\r\n        email: '',\r\n        email2: '',\r\n        email3: '',\r\n        calle: '',\r\n        numero_exterior: '',\r\n        numero_interior: '',\r\n        codpos: '',\r\n        colonia: '',\r\n        estado: ''\r\n    })\r\n\r\n    \r\n\r\n   \r\n    \r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        const response = await fetch('http://app-factura-carnes.herokuapp.com/api/clientes/add', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n            const resData = await res;\r\n            return resData;\r\n        })\r\n    }\r\n\r\n    const handleType = (e) => {\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: value\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container fs-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-left pt-5\">\r\n                        <h5 className=\"h2 uppercase text-center\">\r\n                            Registra tus datos fiscales\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col p-5\">\r\n                        <form onSubmit={handleSubmit(onSubmit)} className={ errors === {} ? 'was-validated' : 'needs-validated' } noValidate>\r\n                            \r\n                            <div className=\"mb-3 text-left\">\r\n                                <label htmlFor=\"rfc\" className=\"form-label\">RFC</label>\r\n                                <input value={ data.rfc } type=\"text\" className=\"form-control fs-6\" id=\"rfc\" {...register(\"rfc\", {required: true})} onChange={ handleType } />\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"name\" className=\"form-label\">Nombre</label>\r\n                                    <input value={ data.nombre } type=\"text\" className=\"form-control fs-6\" id=\"name\" {...register(\"nombre\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"apeidos\" className=\"form-label\">Apellidos</label>\r\n                                    <input value={ data.apellidos } type=\"text\" className=\"form-control fs-6\" id=\"apeidos\" {...register(\"apellidos\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\" mb-3 text-left\">\r\n                                <label htmlFor=\"razons\" className=\"form-label\">Razon Social</label>\r\n                                <input value={ data.razons } type=\"text\" className=\"form-control fs-6\" id=\"razons\" {...register(\"razons\", {required: true,})} onChange={ handleType } />\r\n                            </div>\r\n\r\n\r\n                            <div className=\" mb-3 text-left\">\r\n                                <label htmlFor=\"telefono\" className=\"form-label\">Telefono</label>\r\n                                <input value={ data.telefono } type=\"text\" className=\"form-control fs-6\" id=\"telefono\" {...register(\"telefono\", {required: true,})} onChange={ handleType } />\r\n                            </div>\r\n\r\n                            \r\n                            <div className=\"mb-3 text-left\">\r\n                                <label htmlFor=\"exampleInputMail\" className=\"form-label\">Correos:</label>\r\n                                <input value={ data.email }  type=\"text\" className=\"form-control fs-6\"  id=\"email\" {...register(\"email\", {required: true,  pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                                <input value={ data.email2 }  type=\"text\" className=\"form-control fs-6\" id=\"email2\" {...register(\"email2\", { pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                                <input value={ data.email3 }  type=\"text\" className=\"form-control fs-6\" id=\"email3\" {...register(\"email3\", { pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"codpos\" className=\"form-label\"><abbr title=\"Codigo Postal\">C.P</abbr></label>\r\n                                    <input value={ data.codpos } type=\"text\" className=\"form-control fs-6\" id=\"codpos\" {...register(\"codpos\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-4 mb-3 text-left\">\r\n                                    <label htmlFor=\"Estado\" className=\"form-label\">Estado</label>\r\n                                    <input value={ data.estado } type=\"text\" className=\"form-control fs-6\" id=\"Estado\"  {...register(\"estado\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-5 mb-3 text-left\">\r\n                                    <label htmlFor=\"colonia\" className=\"form-label\">Colonia</label>\r\n                                    <input value={ data.colonia } type=\"text\" className=\"form-control fs-6\" id=\"colonia\" {...register(\"colonia\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"calle\" className=\"form-label\">Calle</label>\r\n                                    <input value={ data.calle } type=\"text\" className=\"form-control fs-6\" id=\"calle\" {...register(\"calle\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"numero_exterior\" className=\"form-label\">Num. Ext.</label>\r\n                                    <input value={ data.numero_exterior } type=\"text\" className=\"form-control fs-6\" id=\"numero_exterior\" {...register(\"numero_exterior\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"numero_interior\" className=\"form-label\">Num. Int.</label>\r\n                                    <input value={ data.numero_interior } type=\"text\" className=\"form-control fs-6\" id=\"numero_interior\" {...register(\"numero_interior\")} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            \r\n                            \r\n\r\n\r\n\r\n                            \r\n                            <div className=\"col mx-auto text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" >Enviar</button>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const FormularioUpdate = () => {\r\n    const { rfc } = useParams();\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [data, setData] = useState({\r\n        nombre: '',\r\n        apellidos: '',\r\n        telefono: '',\r\n        razons: '',\r\n        rfc: '',\r\n        email: '',\r\n        email2: '',\r\n        email3: '',\r\n        calle: '',\r\n        numero_exterior: '',\r\n        numero_interior: '',\r\n        codpos: '',\r\n        colonia: '',\r\n        ciudad: '',\r\n        delegacion: '',\r\n        localidad: '',\r\n        cfdis: '',\r\n        numregidtrib: '',\r\n        usocfdi: '',\r\n        estado: ''\r\n    })\r\n    const [isDisable, setisDisable] = useState(false)\r\n\r\n    \r\n\r\n   \r\n    useEffect(() => {\r\n        const bringData = async () => {\r\n            await fetch(`http://app-factura-carnes.herokuapp.com/api/clientes/getByRFC?rfc=${ rfc }`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            })\r\n            .then( (res) => res.json())\r\n            .then( async (res) => {\r\n                const resData = await res;\r\n                if (resData.status===\"error\"){\r\n\r\n                } else {\r\n                    setData({\r\n                        nombre: (resData.Data.Contacto.Nombre) ? resData.Data.Contacto.Nombre : '',\r\n                        apellidos: (resData.Data.Contacto.Apellidos) ? resData.Data.Contacto.Apellidos : '',\r\n                        telefono: (resData.Data.Contacto.Telefono) ? resData.Data.Contacto.Telefono : '',\r\n                        razons: (resData.Data.RazonSocial) ? resData.Data.RazonSocial : '',\r\n                        rfc: (resData.Data.RFC) ? resData.Data.RFC : '',\r\n                        email: (resData.Data.Contacto.Email) ? resData.Data.Contacto.Email : '',\r\n                        email2: (resData.Data.Contacto.Email2) ? resData.Data.Contacto.Email2 : '',\r\n                        email3: (resData.Data.Email3) ? resData.Data.Email3 : '',\r\n                        calle: (resData.Data.Calle) ? resData.Data.Calle : '',\r\n                        numero_exterior: (resData.Data.Numero) ? resData.Data.Numero : '',\r\n                        numero_interior: (resData.Data.Interior) ? resData.Data.Interior : '',\r\n                        codpos: (resData.Data.CodigoPostal) ? resData.Data.CodigoPostal : '',\r\n                        colonia: (resData.Data.Colonia) ? resData.Data.Colonia : '',\r\n                        ciudad: (resData.Data.Ciudad) ? resData.Data.Ciudad : '',\r\n                        delegacion: (resData.Data.Delegacion) ? resData.Data.Delegacion : '',\r\n                        localidad: (resData.Data.Localidad) ? resData.Data.Localidad : '',\r\n                        cfdis: (resData.Data.cfdis) ? resData.Data.cfdis : '',\r\n                        numregidtrib: (resData.Data.NumRegIdTrib) ? resData.Data.NumRegIdTrib : '',\r\n                        usocfdi: (resData.Data.UsoCFDI) ? resData.Data.UsoCFDI : '',\r\n                        uid: resData.Data.UID,\r\n                        estado: (resData.Data.Estado) ? resData.Data.Estado : ''\r\n                    })\r\n                    \r\n                }\r\n                return resData;\r\n            })\r\n        }\r\n        if(rfc) {\r\n            bringData();\r\n        } else {\r\n            \r\n        }\r\n    }, [rfc])\r\n\r\n\r\n\r\n    const onSubmit = async (dataForm) => {\r\n        \r\n        const response = await fetch('http://localhost:5000/api/clientes/update', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({...dataForm, uid: data.uid})\r\n        })\r\n        .then( (res) => res.json() )\r\n        .then(async (res) => {\r\n            const resData = await res;\r\n            return resData;\r\n        })\r\n        if(response.status === \"success\"){\r\n            setisDisable(true);\r\n        } else {\r\n            setisDisable(false);\r\n        }\r\n    }\r\n\r\n    const handleType = (e) => {\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container fs-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-left pt-5\">\r\n                        <h5 className=\"h2 uppercase text-center\">\r\n                            Actualiza tus datos fiscales\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col p-5\">\r\n                        <form onSubmit={handleSubmit(onSubmit)} className={ ( errors === {} ) ?  'was-validated' : 'needs-validated' } noValidate=\"\">\r\n                            \r\n                            <div className=\"mb-3 text-left\">\r\n                                <label htmlFor=\"rfc\" className=\"form-label\">RFC</label>\r\n                                <input value={ data.rfc } type=\"text\" className={`form-control fs-6 ${ errors.rfc ? 'is-invalid' : ' ' } `} id=\"rfc\" {...register(\"rfc\", {required: true})} onChange={ handleType } />\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"name\" className=\"form-label\">Nombre</label>\r\n                                    <input value={ data.nombre } type=\"text\" className={ `form-control fs-6 ${ errors.nombre ? 'is-invalid' : ' ' } `} id=\"name\" {...register(\"nombre\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"apeidos\" className=\"form-label\">Apellidos</label>\r\n                                    <input value={ data.apellidos } type=\"text\" className={ `form-control fs-6 ${ errors.apellidos ? 'is-invalid' : ' ' } `} id=\"apeidos\" {...register(\"apellidos\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\" mb-3 text-left\">\r\n                                <label htmlFor=\"razons\" className=\"form-label\">Razon Social</label>\r\n                                <input value={ data.razons } type=\"text\" className={ `form-control fs-6 ${ errors.razons ? 'is-invalid' : ' ' } `} id=\"razons\" {...register(\"razons\", {required: true,})} onChange={ handleType } />\r\n                            </div>\r\n\r\n\r\n                            <div className=\" mb-3 text-left\">\r\n                                <label htmlFor=\"telefono\" className=\"form-label\">Telefono</label>\r\n                                <input value={ data.telefono } type=\"text\" className={ `form-control fs-6 ${ errors.telefono ? 'is-invalid' : ' ' } `} id=\"telefono\" {...register(\"telefono\", {required: true,})} onChange={ handleType } />\r\n                            </div>\r\n\r\n                            \r\n                            <div className=\"mb-3 text-left\">\r\n                                <label htmlFor=\"exampleInputMail\" className=\"form-label\">Correos:</label>\r\n                                <input value={ data.email }  type=\"text\" className={ `form-control fs-6 ${ errors.email ? 'is-invalid' : ' ' } `}  id=\"email\" required {...register(\"email\", {required: true,  pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                                <input value={ data.email2 }  type=\"text\" className={ `form-control fs-6 ${ errors.email2 ? 'is-invalid' : ' ' } `} id=\"email2\" {...register(\"email2\", { pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                                <input value={ data.email3 }  type=\"text\" className={ `form-control fs-6 ${ errors.email3 ? 'is-invalid' : ' ' } `} id=\"email3\" {...register(\"email3\", { pattern: /^\\S+@\\S+$/i})} onChange={ handleType } />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"codpos\" className=\"form-label\"><abbr title=\"Codigo Postal\">C.P</abbr></label>\r\n                                    <input value={ data.codpos } type=\"text\" className={ `form-control fs-6 ${ errors.codpos ? 'is-invalid' : ' ' } `} id=\"codpos\" {...register(\"codpos\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-4 mb-3 text-left\">\r\n                                    <label htmlFor=\"Estado\" className=\"form-label\">Estado</label>\r\n                                    <input value={ data.estado } type=\"text\" className={ `form-control fs-6 ${ errors.estado ? 'is-invalid' : ' ' } `} id=\"Estado\"  {...register(\"estado\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-5 mb-3 text-left\">\r\n                                    <label htmlFor=\"ciudad\" className=\"form-label\">Ciudad</label>\r\n                                    <input value={ data.ciudad } type=\"text\" className={ `form-control fs-6 ${ errors.ciudad ? 'is-invalid' : ' ' } `} id=\"ciudad\" {...register(\"ciudad\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-4 mb-3 text-left\">\r\n                                    <label htmlFor=\"localidad\" className=\"form-label\">Localidad</label>\r\n                                    <input value={ data.localidad } type=\"text\" className={ `form-control fs-6 ${ errors.localidad ? 'is-invalid' : ' ' } `} id=\"localidad\" {...register(\"localidad\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-4 mb-3 text-left\">\r\n                                    <label htmlFor=\"colonia\" className=\"form-label\">Colonia</label>\r\n                                    <input value={ data.colonia } type=\"text\" className={ `form-control fs-6 ${ errors.colonia ? 'is-invalid' : ' ' } `} id=\"colonia\" {...register(\"colonia\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-4 mb-3 text-left\">\r\n                                    <label htmlFor=\"delegacion\" className=\"form-label\">Delegacion</label>\r\n                                    <input value={ data.delegacion } type=\"text\" className={ `form-control fs-6 ${ errors.delegacion ? 'is-invalid' : ' ' } `} id=\"delegacion\" {...register(\"delegacion\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 mb-3 text-left\">\r\n                                    <label htmlFor=\"calle\" className=\"form-label\">Calle</label>\r\n                                    <input value={ data.calle } type=\"text\" className={ `form-control fs-6 ${ errors.calle ? 'is-invalid' : ' ' } `} id=\"calle\" {...register(\"calle\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"numero_exterior\" className=\"form-label\">Num. Ext.</label>\r\n                                    <input value={ data.numero_exterior } type=\"text\" className={ `form-control fs-6 ${ errors.numero_exterior ? 'is-invalid' : ' ' } `} id=\"numero_exterior\" required {...register(\"numero_exterior\", {required: true})} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3 mb-3 text-left\">\r\n                                    <label htmlFor=\"numero_interior\" className=\"form-label\">Num. Int.</label>\r\n                                    <input value={ data.numero_interior } type=\"text\" className={ `form-control fs-6 ${ errors.numero_interior ? 'is-invalid' : ' ' } `} id=\"numero_interior\" {...register(\"numero_interior\")} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row pb-4\">\r\n                                <div className=\"col-5\">\r\n                                    <label htmlFor=\"numregidtrib\" className=\"form-label\">Num. registro tribunal</label>\r\n                                    <input value={ data.numregidtrib } type=\"text\" className={ `form-control fs-6 ${ errors.numregidtrib ? 'is-invalid' : ' ' } `} id=\"numregidtrib\" {...register(\"numregidtrib\")} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label htmlFor=\"usocfdi\" className=\"form-label\">Uso CFDI</label>\r\n                                    <input value={ data.usocfdi } type=\"text\" className={ `form-control fs-6 ${ errors.usocfdi ? 'is-invalid' : ' ' } `} id=\"usocfdi\" {...register(\"usocfdi\")} onChange={ handleType } />\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label htmlFor=\"cfdis\" className=\"form-label\">CFDIS</label>\r\n                                    <input value={ data.cfdis } type=\"text\" className={ `form-control fs-6 ${ errors.cfdis ? 'is-invalid' : ' ' } `} id=\"cfdis\" {...register(\"cfdis\")} onChange={ handleType } />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            \r\n                            <div className=\"col mx-auto text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" disabled={ isDisable } >Envíar</button>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const DataCard = ({ usuario }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{ `${ usuario.Contacto.Nombre } ${ usuario.Contacto.Apellidos }, ${ usuario.RFC } ` }</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\"> { usuario.Contacto.Email }</h6>\r\n                <p className=\"card-text\"> { `${ usuario.Pais }, ${ usuario.Estado }, ${ usuario.Colonia }, ${ usuario.Calle } ${ usuario.Numero }, ${ usuario.CodigoPostal } ` } </p>\r\n                <a href={`/edit/${ usuario.RFC }`} className=\"card-link\"><button className=\"btn btn-primary\" >Editar</button></a>\r\n                <a href={`/crearFactura/${ usuario.UID }`} className=\"card-link\"><button className=\"btn btn-primary\" >Crear Factura</button></a>\r\n                <a href={`/facturas`} className=\"card-link\"><button className=\"btn btn-primary\" >Facturas</button></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { DataCard } from './DataCard'\r\n\r\n\r\n//RFC PRUEBA: X12345X12345X\r\n//RFC Prueba 2 : XAXX010101000\r\n\r\n\r\nexport const MainMenu = ({ rfc }) => {\r\n\r\n\r\n\r\n\r\n    const [usuarios, setData] = useState({\r\n        data: []\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const bringData = async () => {\r\n            await fetch(`http://app-factura-carnes.herokuapp.com/api/clientes/getListByRFC?rfc=${ rfc }`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            })\r\n            .then( (res) => res.json() )\r\n            .then( async (res) => {\r\n                const resData = await res;\r\n                if(resData.status === \"error\" ){\r\n\r\n                } else {\r\n                    setData({\r\n                        data: resData.Data\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        if (!rfc){\r\n            console.log('no hay rfc :c')\r\n        } else {\r\n            bringData();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [rfc])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container pt-5\">\r\n            <div className=\"row\">\r\n                {\r\n                    (usuarios.data.length === 0) ? <p>Agrega tus datos fiscales!</p> : usuarios.data.map((element) => {\r\n\r\n                        return (\r\n                        <>\r\n                        <div className=\"col-sm-4\">\r\n                            <DataCard usuario={ element } key={ element.UID } />\r\n                        </div>\r\n                        </>\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"row py-5\">\r\n                <div className=\"col\">\r\n                    <a href=\"/create\">\r\n                        <button className=\"btn btn-large btn-primary\"> Crear Datos Fiscales </button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { FacturaList } from '../components/FacturaList';\r\nimport { FormularioFactura } from '../components/FormularioFactura';\r\nimport { FormularioRegistro } from '../components/FormularioRegistro';\r\nimport { FormularioUpdate } from '../components/FormularioUpdate';\r\nimport { MainMenu } from '../components/MainMenu'; \r\n\r\n\r\nexport const RouterComponent = () => {\r\n    \r\n    return (\r\n        <>\r\n        <Switch>\r\n            <Route exact path=\"/profile\" >\r\n                <MainMenu rfc=\"XAXX010101000\" ></MainMenu>\r\n            </Route>\r\n            <Route exact path=\"/create\" component={ FormularioRegistro }></Route>\r\n            <Route exact path=\"/edit/:rfc\" component={ FormularioUpdate  } ></Route>\r\n            <Route exact path=\"/crearFactura/:uid\" component={ FormularioFactura }></Route>\r\n            <Route exact path=\"/facturas\">\r\n                <FacturaList rfc=\"XAXX010101000\"></FacturaList>\r\n            </Route>\r\n            <Redirect to=\"/profile\" ></Redirect>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom'\r\nimport { RouterComponent } from './router/RouterComponent';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <RouterComponent />\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}